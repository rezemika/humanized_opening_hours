WDAY : "Mo" | "Tu" | "We" | "Th" | "Fr" | "Sa" | "Su"
MONTH : "Jan" | "Feb" | "Mar" | "Apr" | "May" | "Jun" | "Jul" | "Aug" | "Sep" | "Oct" | "Nov" | "Dec"
PUBLIC_HOLIDAY : "PH"
SCHOOL_HOLIDAY : "SH"
EVENT : "dawn" | "sunrise" | "sunset" | "dusk"
EASTER : "easter"
OPEN : " open"
CLOSED : " closed" | " off"
ALWAYS_OPEN : "24/7"
WEEK : "week "

TWO_DIGITS.1 : /[0-9][0-9]+/
YEAR : /([12][0-9]{3})+/

PLUS_OR_MINUS : "+" | "-"

//

// The support of the comma as rule separator is not supported yet
// in the parsing code (comma and semicolons are treated as equals),
// but the current implementation of rules is not perfect and doesn't
// perfectly fits the specifications, so it makes no difference yet.
time_domain : rule_sequence (("; "|", ") rule_sequence)*

rule_sequence : ALWAYS_OPEN -> always_open_rule
              | range_selectors " " time_selector
              | range_selectors " " time_selector rule_modifier
              | time_selector
              | time_selector rule_modifier -> time_modifier_rule
              | range_selectors rule_modifier -> range_modifier_rule
//              | rule_modifier -> modifier_only_rule  // TODO: Allow only "off".

rule_modifier : OPEN -> rule_modifier_open
              | CLOSED -> rule_modifier_closed

//

%ignore " "
range_selectors : [year_selector] [monthday_selector] [week_selector] [":"] [weekday_selector]

//

weekday_selector : (weekday_sequence | holiday ("," holiday)*) -> weekday_or_holiday_sequence_selector
                 | holiday ("," holiday)* "," weekday_sequence -> holiday_and_weekday_sequence_selector
                 | weekday_sequence "," holiday ("," holiday)* -> holiday_and_weekday_sequence_selector  // Not valid but frequent pattern.
                 | holiday ("," holiday)* " " weekday_sequence -> holiday_in_weekday_sequence_selector
weekday_sequence : weekday_range ("," weekday_range)*
weekday_range : WDAY
              | WDAY "-" WDAY
holiday : PUBLIC_HOLIDAY
        | SCHOOL_HOLIDAY

//

%import common.INT
//day_offset : " " PLUS_OR_MINUS INT " day" ["s"]

//

time_selector : timespan ("," timespan)*
timespan : time "-" time
time : hour_minutes | variable_time
hour_minutes : TWO_DIGITS ":" TWO_DIGITS
variable_time : EVENT
              | "(" EVENT PLUS_OR_MINUS hour_minutes ")"

//

year_selector : year_range ("," year_range)*
year_range : year
           | year "-" year
           | year "-" year "/" INT
year : YEAR

//

// TODO : Prevent case like "Jan 1-5-Feb 1-5" (monthday_date - monthday_date)
monthday_selector : monthday_range ("," monthday_range)*
monthday_range : monthday_date  // "Dec 25"
               | monthday_date "-" monthday_date  // "Jan 1-Feb 1"
monthday_date : [year " "] MONTH " " INT -> monthday_date_monthday
              | [year " "] MONTH " " INT "-" INT -> monthday_date_day_to_day
              | [year " "] MONTH -> monthday_date_month
              | [year " "] EASTER -> monthday_date_easter

//

week_selector : WEEK week ("," week)*  // TODO
week : weeknum
     | weeknum "-" weeknum
     | weeknum "-" weeknum "/" INT
weeknum : INT
